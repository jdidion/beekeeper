name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check lints, formatting, and documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - run: cargo clippy --all-targets -- -D warnings $(cat .lints | cut -f1 -d"#" | tr '\n' ' ')
      - run: cargo fmt -- --check
      - run: cargo doc -F affinity,retry
      - run: cargo test -F affinity,retry --doc

  build_and_test:
    name: Build and test all combinations features
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        channel:
          - default
          - crossbeam
          - flume
          - loole
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-all-features
      - uses: actions-rs/cargo@v1
        with:
          command: build-all-features
          args: -F ${{ matrix.channel }} --all-targets
      - uses: actions-rs/cargo@v1
        with:
          command: test-all-features
          args: -F ${{ matrix.channel }} --lib
